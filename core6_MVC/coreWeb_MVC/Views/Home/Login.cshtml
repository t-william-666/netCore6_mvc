@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@*强类型*@
@*@model IEnumerable<coreWeb_MVC.Models.Shop>*@
@{
    Layout = null;
    //生成令牌 需要引入  @inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
    var requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>用户登录</title>
    <!-- Favicon 图标 页面图标 -->
    <link rel="shortcut icon" type="image/x-icon" v-text="msg" href="~/images/favicon.ico">
    <!-- 引入bootstrap样式 -->
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css">
    <!-- 引入bootstrap样式 这个版本轮播样式才有效果 -->
    <link rel="stylesheet" href="~/bootstrap-3.4.1-dist/css/bootstrap.css">
    <!-- 引入样式 -->
    <link rel="stylesheet" href="~/css/index.css">
    <!-- 引入Jquery的JS文件 -->
    <script src="~/js/jquery-3.5.1.min.js"></script>
    <!-- 引入Vue的JS文件 -->
    <script src="~/js/Vue.js"></script>
    <script src="~/js/axios.min.js"></script>
</head>

<body class="body-bg">
    <header>
        <div class="header-sm">
            <div class="container">
                <div class="row">
                    <div class="col-lg-8 col-md-6 col-xs-6">
                        <p>
                            <a asp-controller="Home" asp-action="Home" class="section-title-1">欢迎登录购物网站</a>
                        </p>
                    </div>
                    <div class="col-lg-4 col-md-6 col-xs-6">
                        <ul class="row">
                            <li class="col-lg-4 col-md-4 col-xs-4">

                            </li>
                            <li class="col-lg-4 col-md-4 col-xs-4">
                                <a asp-controller="Home" asp-action="Login" class="p-h20">登录</a>
                                <!--<button type="button" class="p-h20 ">登录</button>-->
                            </li>
                            <li class="col-lg-4 col-md-4 col-xs-4">
                                <a asp-area="" asp-controller="Home" asp-action="Register" class="p-h20">注册</a>
                                <!--<button type="button" class="p-h20">注册</button>-->
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <!-- 令牌放在.net的html里面 显式添加-->
    @Html.AntiForgeryToken();
    <!-- 令牌放在input里面 显式添加-->
    <input type="hidden" id="token" value="@requestToken" />
    <div class="content" id="app">
        <div class="content-center container">
            <p class="fs-3 text-center my-md-2">用户登录</p>
            <div class="row my-md-3">
                <div class="col-lg-3 col-xs-3">账号：</div>
                <div class="col-lg-9 col-xs-9">
                    <input type="text" id="txtLogin" class="form-control d-inline-block align-self-center" placeholder="请输入账号" v-model="user">
                </div>
            </div>
            <div class="row my-md-3">
                <div class="col-lg-3 col-xs-3">密码：</div>
                <div class="col-lg-9 col-xs-9">
                    <input type="password" id="txtPassword" class="form-control d-inline-block align-self-center" placeholder="请输入密码" v-model="pass">
                </div>
            </div>
            <div class="row py-md-2">
                <div class="col-lg-6 col-md-6 col-xs-6 text-xxl-start">
                    <a href="#" class="fs-14">没有账号？注册账号</a>
                </div>
                <div class="col-lg-6 col-md-6 col-xs-6 text-xxl-end">
                    <a href="#" class="fs-14">忘记密码？</a>
                </div>
            </div>
            <div class="row py-md-2">
                <p class="p-right h-100 user-select">
                    <input id="checkUser" type="checkbox" class="check-position">
                    <label for="checkUser" class="fs-13"> 记住密码 </label>
                </p>
            </div>
            <div class="d-flex justify-content-center my-md-5 ">
                <button type="button" class="btn btn-success w-50 d-inline-block" id="btnLogin" v-on:click="loginWeb">登录</button>
            </div>
        </div>
    </div>
    @*<script type="text/javascript" src="http://localhost:54582/49f9d537c5d843659467d6c19f80d85c/browserLink" async="async" id="__browserLink_initializationData" data-requestId="c236d7d7537e4b6c9bfb1da2cfed0829" data-requestMappingFromServer="False"></script>*@

</body>
<script src="~/layer/layer.js" charset="utf-8"></script>
<script type="text/javascript" src="~/layer/xadmin.js"></script>
<script>
    //$("button").on('click', function () {
    //    //alert(123);
    //    $(this).animate("jelly", 0.5);
    //})

     ////使用Jquery的Ajax请求
     $("#btnLogin").click(function () {
         let getUrl = "/Home/Logining";
         let userID = $("#txtLogin").val();
         //userID = document.getElementById("txtLogin").value;
         let password = $("#txtPassword").val();
         if (userID = null || userID == "") {
             layer.msg("账号不能为空，请输入账号！", {
                 icon: 0
             });
             return;
         }
         if (password == null || password == "") {
             layer.msg("密码不能为空，请输入密码！", {
                 icon: 0
             });
             return;
         }
         userID="123456";
         password="123456";
         var a=22;
         $.ajax({
             url: getUrl,
             type: "post",
             headers:{//传送令牌
                 RequestVerificationToken:$("#token").val() ////服务配置没有配置标头时，标头的名称则为 RequestVerificationToken
                 //"X-XSRF-TOKEN":$("#token").val() ////X-XSRF-TOKEN 为 服务配置的标头，且必须为配置的标头名称；否则请求失败！
             },
             data: {
                 userID, password
             },
             success: function (da) {
                 if (da == "sorry") {
                     layer.msg("您输入的密码错误或账号不存在！", {
                         icon: 0
                     });
                     console.log(da);
                 }
                 else
                 {
                     console.log(da);
                     location.href='/Home/Home';
                 }
             },
             error: function (err) {
                 console.log(err);
             }
         });
     });
     alert(22+a);

     var vm1 = new Vue({
        el: "#app",
        data: {
            user: "",
            pass: "",
        },
        methods: {
            ////Vue的Ajax请求
            loginWeb: function () {
                //if (this.user = null || this.user == "") {
                //    layer.msg("账号不能为空，请输入账号！", {
                //        icon: 0
                //    });
                //    return;
                //}
                //if (this.pass == null || this.pass == "") {
                //    layer.msg("密码不能为空，请输入密码！", {
                //        icon: 0
                //    });
                //    return;
                //}

                ////请求路径
                //let getUrl = "http://localhost:4460/Home/Logining";
                //axios({
                //    method: "post",
                //    url: getUrl,
                //    params: {
                //        userID: this.user,
                //        password: this.pass
                //    }
                //}).then(function (res) {//请求成功
                //    if(res.data=="sorry"){
                //        layer.msg("您输入的密码错误或账号不存在！", {
                //            icon: 0
                //        });
                //        console.log(res.data);
                //    }
                //    else
                //    {
                //        //获取返回内容
                //        console.log(res);
                //        //获取重新定向的路径
                //        console.log( res.request.responseURL);
                //        //location.href=res.request.responseURL;
                //    }
                //}).catch(function (err) {//请求失败
                //    console.log(err);
                //})

                //axios.get(getUrl, {

                //})

                //axios.post(getUrl, {

                //})
             }
        },
        //计算属性
        computed: {

        },
        //监听属性
        watch: {

        },
        //组件属性
        components: {

        }
    })


</script>

</html>
