@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    Layout = null;
    //生成令牌 需要引入  @inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
    var requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;

}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>用户注册</title>
    <!-- Favicon 图标 页面图标 -->
    <link rel="shortcut icon" type="image/x-icon" v-text="msg" href="~/images/favicon.ico">
    <!-- <link rel="stylesheet" href="icon" type="image/png" href="./images/bg.png"> -->
    <!-- 引入bootstrap样式 -->
    <link rel="stylesheet" href="~/bootstrap/lib/bootstrap/dist/css/bootstrap.css">
    <!-- 引入bootstrap样式 这个版本轮播样式才有效果 -->
    <link rel="stylesheet" href="~/bootstrap/bootstrap-3.4.1-dist/css/bootstrap.css">
    <!-- 字体和图标样式 必须有fonts文件且 font.awesome.min.css 的路径是正确的-->
    <link rel="stylesheet" href="~/css/vendor/font.awesome.min.css">
    <link rel="stylesheet" href="~/css/vendor/linearicons.min.css">

    <!-- Swiper CSS 刷子轮播 -->
    <link rel="stylesheet" href="~/css/plugins/swiper-bundle.min.css">
    <!-- Animation CSS 动画 -->
    <link rel="stylesheet" href="~/css/plugins/animate.min.css">
    <!-- Jquery ui CSS Jquery界面 -->
    <link rel="stylesheet" href="./css/plugins/jquery-ui.min.css">
    <!-- Nice Select CSS 下拉框样式 -->
    <link rel="stylesheet" href="~/css/plugins/nice-select.min.css">
    <!-- Magnific Popup 图片弹出窗口--放大图并可轮播 -->
    <link rel="stylesheet" href="~/css/plugins/magnific-popup.css">

    <!-- 引入主要样式 -->
    <link rel="stylesheet" href="~/css/index.css">
    
    <!-- 引入Jquery的JS文件 -->
    <script src="~/bootstrap/lib/jquery/dist/jquery.min.js"></script>
    <!-- 引入bootstrap的JS样式 -->
    <script src="~/bootstrap/lib/bootstrap/dist/js/bootstrap.min.js"></script>
    <!-- 引入bootstrap的JS样式 这个版本轮播样式才有效果-->
    <script src="~/bootstrap/bootstrap-3.4.1-dist/js/bootstrap.min.js"></script>
    <!-- 引入Vue的JS文件 -->
    <script src="~/js/Vue.js"></script>
    <script src="~/js/axios.min.js"></script>
</head>

<body class="body-bg">
    <header>
        <div class="header-sm">
            <div class="container">
                <div class="row">
                    <div class="col-lg-8 col-md-6 col-xs-6">
                        <p>
                            <a asp-controller="Home" asp-action="Home" class="section-title-1 btnlogreg">欢迎登录购物网站</a>
                        </p>
                    </div>
                    <div class="col-lg-4 col-md-6 col-xs-6">
                        <ul class="row">
                            <li class="col-lg-4 col-md-4 col-xs-4">

                            </li>
                            <li class="col-lg-4 col-md-4 col-xs-4">
                                <a asp-controller="Home" asp-action="Login" class="p-h20 btnlogreg">登录</a>
                                <!--<button type="button" class="p-h20 ">登录</button>-->
                            </li>
                            <li class="col-lg-4 col-md-4 col-xs-4">
                                <a  asp-controller="Home" asp-action="Register" class="p-h20 btnlogreg">注册</a>
                                <!--<button type="button" class="p-h20">注册</button>-->
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- 令牌放在.net的html里面 显式添加-->
        @Html.AntiForgeryToken();
        <!-- 令牌放在input里面 显式添加-->
        <input type="hidden" id="token" value="@requestToken" v-model="token=this" />
        <div id="app" class="content">
            <div class="content-center container">
                <p class="fs-3 text-center my-md-2">用户注册</p>
                <div class="row my-md-3">
                    <div class="col-lg-3 col-xs-3"><i class="fa fa-user"></i>账号：</div>
                    <div class="col-lg-9 col-xs-9">
                        <input type="text" id="txtRegister" class="form-control d-inline-block align-self-center" placeholder="请输入账号" v-model="user">
                    </div>
                </div>
                <div class="row my-md-3">
                    <div class="col-lg-3 col-xs-3"><i class="fa fa-lock"></i>密码：</div>
                    <div class="col-lg-9 col-xs-9">
                        <input type="password" id="txtPassword" class="form-control d-inline-block align-self-center" placeholder="请输入密码" v-model="pass">
                    </div>
                </div>
                <div class="row my-md-3">
                    <div class="col-lg-3 col-xs-3">确认密码：</div>
                    <div class="col-lg-9 col-xs-9">
                        <input type="password" id="txtPasswordTrue" class="form-control d-inline-block align-self-center" placeholder="请输入确认密码" v-model="passtrue">
                    </div>
                </div>
                <div class="row ">
                    <div class="col-lg-6 col-md-6 col-xs-6 text-xxl-start">
                        <p class="row my-md-2 p-txt">
                            <a href="#" class="fs-14">已有账号？登录账号</a>
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-xs-6 text-xxl-end">
                        <p class="row justify-content-lg-end my-md-2 ">
                            <input type="text" class="d-inline-block col-lg-8 pw-100 rounded-1" placeholder="验证码">
                            <button type="button" class="d-inline-block col-lg-4 pw-60 rounded-1 fs-13">获取验证码</button>
                        </p>
                    </div>
                </div>
                <div class="d-flex justify-content-center my-md-5 animation-jelly">
                    <button type="button" class="btn btn-success w-50 d-inline-block" id="btnRegister" v-on:click="registerWeb">注册</button>
                </div>
            </div>
        </div>
</body>

<script type="text/javascript">
    //$("button").on('click', function () {
    //    alert(123);
    //    $(this).animate("jelly", 0.5);
    //})

    ////使用Jquery的Ajax请求
    //$("#btnRegister").click(function () {
    //    let getUrl = "/Home/Register";
    //    let userID = $("#txtRegister").val();
    //    let password = $("#txtPassword").val();
    //    let passwordTrue=$("#txtPasswordTrue").val();
        
      
    //    $.ajax({
    //        url: getUrl,
    //        type: "post",
    //        headers:{//传送令牌
    //             RequestVerificationToken:$("#token").val() ////服务配置没有配置标头时，标头的名称则为 RequestVerificationToken
    //             //"X-XSRF-TOKEN":$("#token").val() ////X-XSRF-TOKEN 为 服务配置的标头，且必须为配置的标头名称；否则请求失败！
    //        },
    //        data: {
    //            userID, password,passwordTrue
    //        },
    //        success: function (da) {
    //            if (da == "sorry") {
    //                console.log(da);
    //            }
    //            else {
    //                console.log(da);
    //                location.href='/Home/Home';
    //            }
    //        },
    //        error: function (err) {
    //            console.log(err);
    //        }
    //    });
    //});

     var vm1 = new Vue({
        el: "#app",
        data: {
            token:"",
            user: "",
            pass: "",
            passtrue:"",
        },
        methods: {
            ////Vue的Ajax请求
            registerWeb: function () {
                //请求路径
                let getUrl = "http://localhost:4460/Home/Register";
                axios({
                    method: "post",
                    url: getUrl,
                    headers:{"RequestVerificationToken":"@requestToken"},
                    params: {
                        userID: this.user,
                        password: this.pass,
                        passwordTrue:this.passtrue
                    }
                }).then(function (res) {//请求成功
                    if(res.data=="sorry"){
                        console.log(res.data);
                    }
                    else
                    {
                        //获取返回内容
                        console.log(res);
                        //获取重新定向的路径
                        console.log( res.request.responseURL);
                        location.href=res.request.responseURL;
                    }
                }).catch(function (err) {//请求失败
                    console.log(err);
                })

                //axios.get(getUrl, {

                //})

                //axios.post(getUrl, {

                //})
             }
        },
        //计算属性
        computed: {

        },
        //监听属性
        watch: {

        },
        //组件属性
        components: {

        }
    })
</script>
</html>