##-----------------------------------------------------------------------------------------------------------------------------------------------##
##------------------------------------------------------- ------ main模块 -----------------------------------------------------------------------##
##-----------------------------------------------------------------------------------------------------------------------------------------------##
#用来指定nginx worker进程运行用户以及用户组，默认nobody账号运行
#user  nobody;
worker_processes  1;
#Nginx报错日志 定义错误日志文件的位置及输出级别
error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;
#用来指定进程id的存储文件的位置
pid        logs/nginx.pid;

##-----------------------------------------------------------------------------------------------------------------------------------------------##
##-------------------------------------------------------------- event模块 ----------------------------------------------------------------------##
##-----------------------------------------------------------------------------------------------------------------------------------------------##
events {
    #指定最大可以同时接收的连接数量，这里一定要注意，最大连接数量是和worker processes共同决定的。
    worker_connections  1024;
}

##-----------------------------------------------------------------------------------------------------------------------------------------------##
##-------------------------------------------------------------- http模块 -----------------------------------------------------------------------##
##-----------------------------------------------------------------------------------------------------------------------------------------------##
http {
    #指定在当前文件中包含另一个文件的指令
    include       mime.types;
    #指定默认处理的文件类型可以是二进制
    default_type  application/octet-stream;
    #Nginx大致有三类变量能够记录在log_format 中 1.HTTP请求变量- arg_PARAMETER http_HEADER send_http_HEADER（服务端返回）2.内置变量- Nginx内置的 3.自定义变量- 自己定义的
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    #设置存储访问记录的日志
    access_log  logs/access.log  main;
    #配置on让sendfile发挥作用，将文件的回写过程交给数据缓冲去去完成，而不是放在应用中完成，这样的话在性能提升有有好处
    sendfile       on;
    #让nginx在一个数据包中发送所有的头文件，而不是一个一个单独发
    tcp_nopush     on;
    #给客户端分配连接超时时间，服务器会在这个时间过后关闭连接
    keepalive_timeout  0;
    #keepalive_timeout  65;
    #是告诉nginx采用gzip压缩的形式发送数据。这将会减少我们发送的数据量。
    gzip  on;

    ##-----------------------------------------------------------------------------------------------------------------------------------------------##
    ##---------------------------------------------------------- sever模块 --------------------------------------------------------------------------##
    ##-----------------------------------------------------------------------------------------------------------------------------------------------##
    server {
        #端口号
        listen       8080;
        #域名或者IP地址
        server_name  localhost;
        #用于设置www/路径中配置的网页的默认编码格式
        charset koi8-r;
        #用于指定该虚拟主机服务器中的访问记录日志存放路径
        access_log  logs/host.access.log  main;
        #用于指定该虚拟主机服务器中访问错误日志的存放路径
        #error_log   logs/host.error.log  main;

        ##-----------------------------------------------------------------------------------------------------------------------------------------------##
        ##----------------------------------------------------- location模块 ----------------------------------------------------------------------------##
        ##-----------------------------------------------------------------------------------------------------------------------------------------------##
        #location /：表示匹配访问根目录
        location / {
            #root：用于指定访问根目录时，访问虚拟主机的web目录
            root   html;
            #index：在不指定访问具体资源时，默认展示的资源文件列表
            index  indexs.html index.htm;
            #如果在proxy_pass后面的url加/，表示绝对根路径；如果没有/，表示相对路径，把匹配的路径部分也给代理走。
            proxy_pass http://localhost:8080;

        }
        #绑定重定向错误码和错误页 报错为404时，跳到404.html页面
        error_page  404              /404.html;
        #绑定重定向错误码和错误页 报错为 500 502 503 504 时，跳到50x.html页面
        error_page   500 502 503 504  /50x.html;
        #配置自定义的错误页 这里的【location = /50x.html】，表示访问 /50x.html时会访问到root 指定目录的html/page下的50x.html文件
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
    
   
    ##-----------------------------------------------------------------------------------------------------------------------------------------------##
    ##----------------------------------------------------- 负载均衡模块 ----------------------------------------------------------------------------##
    ##-----------------------------------------------------------------------------------------------------------------------------------------------##
    upstream tomcatserver1 {
        server 192.168.72.49:8081;
    }
    upstream tomcatserver2 {
        server 192.168.72.49:8082;
    }
    

}
